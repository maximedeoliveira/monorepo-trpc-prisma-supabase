import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { trpc } from '../utils/trpc';
import { useForm } from 'react-hook-form';

type ItemForm = {
    link: string;
    name: string;
    description?: string;
};

const Home: NextPage = () => {
    const utils = trpc.useContext();
    const items = trpc.item.all.useQuery();
    const mutation = trpc.item.add.useMutation({
        onSuccess: () => {
            utils.item.all.invalidate();
        },
    });

    const { register, handleSubmit } = useForm<ItemForm>();

    const submit = async (data: ItemForm) => {
        console.log(data);
        await mutation.mutate({ name: data.name, link: data.link });
    };

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/apps/app/public/favicon.ico" />
            </Head>
            <form onSubmit={handleSubmit(submit)}>
                <div>
                    <label>Name</label>
                    <input type="text" {...register('name')} />
                </div>
                <div>
                    <label>Link</label>
                    <input type="text" {...register('link')} />
                </div>
                <div>
                    <label>Description</label>
                    <input type="text" {...register('description')} />
                </div>
                <button type="submit">
                    {mutation.isLoading ? 'loading' : 'Valider'}
                </button>
            </form>
            <div>
                <h1>Items</h1>
                {items.isLoading
                    ? 'Loading'
                    : items.data?.map((item) => (
                          <p key={item.id}>{item.name}</p>
                      ))}
            </div>
        </div>
    );
};

export default Home;
